
@{

    Layout = "~/Views/Shared/_pgsmlayout.cshtml";
}

@section AddToHead{
    
<link href="~/Scripts/Highcharts/code/css/highcharts.css" rel="stylesheet" />
    <style>
        html, body {
            height: 100%
        }
    </style>


}


<h2>e-GSM Dashboard</h2>

    <div class="col-md-8">
        <div class="row">

            <div class="tabs-container">
                <ul class="nav nav-tabs">
                    <li class="active"><a aria-expanded="true" href="#viralLoad" data-toggle="tab">Viral Load</a></li>
                    <li><a aria-expanded="false" href="#unsViralLoad" data-toggle="tab">Unsuppressed Viral Load</a></li>
                    <li><a aria-expanded="false" href="#indexTesting" data-toggle="tab">Index Testing </a></li>
                    <li><a aria-expanded="false" href="#retentionAdherence" data-toggle="tab">Retention / Adherence </a></li>
                    <li><a aria-expanded="false" href="#tbHiv" data-toggle="tab">TB HIV </a></li>
                    <li><a aria-expanded="false" href="#diffModelCare" data-toggle="tab">Differentiated Model of Care </a></li>

                </ul>

                <div class="tab-content">
                    @*viralload tab partial view*@
                    @Html.Partial("~/Views/Shared/Partials/_ViralLoadTab.cshtml")

                    @*Unsuppressed viralload tab partial view*@
                    @Html.Partial("~/Views/Shared/Partials/_UnsViralLoadTab.cshtml")

                    @*Index Testing tab partial view*@
                    @Html.Partial("~/Views/Shared/Partials/_IndexTestingTab.cshtml")

                    @*Retention Adherence tab partial view*@
                    @Html.Partial("~/Views/Shared/Partials/_RetentionAdherenceTab.cshtml")

                    @*TB / HIV tab partial view*@
                    @Html.Partial("~/Views/Shared/Partials/_TbHivTab.cshtml")

                    @*Differential Model of Care Partial View*@
                    @Html.Partial("~/Views/Shared/Partials/_DiffModelCareTab.cshtml")

                </div>
            </div>
        </div>
    </div>
    <div class="col-md-2">
        <div class="" style="margin-top:15px;">

            <form class="form-horizontal">
                <div class="form-group">
                    <div class="col-sm-12">
                        <h5 style="text-decoration:underline;">Filter</h5>
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-sm-12">
                        <select class="form-control">
                            <option value="">Select IP</option>
                        </select>
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-sm-12">
                        <select class="form-control">
                            <option value="">Select State</option>
                        </select>
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-sm-12">
                        <select class="form-control">
                            <option value="">Select Site</option>
                        </select>
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-sm-12">
                        <a class="btn btn-sm btn-info" id="btnSearch">Refresh</a>
                    </div>
                </div>
            </form>
        </div>
    </div>


@section Scripts
{
    <script src="~/Scripts/Highcharts/code/highcharts.js"></script>
        <script src="~/Scripts/Highcharts/code/js/modules/exporting.js"></script>


    <script>

        $(document).ready(function () {
            //viral load data from API
            var viralLoadData = [];
            let vl;

            //unsuppressed viral load data from API
            var unsuppressedViralLoadData = [];
            let unsVL;

            //index testing data from API
            var indexTestingData = [];
            let indexTesting;

            //retention adherence data from API
            var retAdherenceData = [];
            let retAdherence;

            //tbHiv data from API
            var tbHivData = [];
            let tbHiv;

            //diff model of care data from API
            var mocData = [];
            let moc;



            function loadData() {
                $.ajax({
                    url: "/Content/data/data.json",
                    type: "GET",
                    success: function (data) {

                        //Viral load data
                        vl = data[0];

                        viralLoadData.push(vl.ViralLoadCascadeTXCurr);
                        viralLoadData.push(vl.ViralLoadCascadeEligible);
                        viralLoadData.push(vl.ViralLoadCascadeSample);
                        viralLoadData.push(vl.ViralLoadCascadeDoc);
                        viralLoadData.push(vl.ViralLoadCascadeSupp);


                        //unsuppressed Viral load data
                        unsVL = data[0].UnSuppresedVLCascade[0];

                        unsuppressedViralLoadData.push(unsVL.AgeCohort);
                        unsuppressedViralLoadData.push(unsVL.UnSuppressedSexMale);
                        unsuppressedViralLoadData.push(unsVL.UnSuppressedSexFemale);
                        unsuppressedViralLoadData.push(unsVL.NoUnSuppressedVL);
                        unsuppressedViralLoadData.push(unsVL.NoCommencedEAC);
                        unsuppressedViralLoadData.push(unsVL.NoOfRepeat);
                        unsuppressedViralLoadData.push(unsVL.NoSwitched);

                        //index testing data
                        let indTesting = data[0];
                        let indexTestingData = [];


                        indexTestingData.push(indTesting.ChartWithPartner);
                        indexTestingData.push(indTesting.ChartPartnerKnownCase);
                        indexTestingData.push(indTesting.PartnerStatusPositive);
                        indexTestingData.push(indTesting.PartnerStatusNegative);
                        indexTestingData.push(indTesting.PartnerStatusUnknown);
                        indexTestingData.push(indTesting.ChildrenIndexCasesListed);
                        indexTestingData.push(indTesting.ChildrenIndexCasesKnown);
                        indexTestingData.push(indTesting.ChildStatusPositive);
                        indexTestingData.push(indTesting.ChildStatusNegative);
                        indexTestingData.push(indTesting.ChildStatusUnknown);

                        let totalIndexIdentified = indTesting.ChartIndentified;


                        //retention adherence data

                        retAdherence = data[0];

                        //early missed data

                        let earlyMissedData = [];

                        earlyMissedData.push(retAdherence.EarlyMissedPatient);
                        earlyMissedData.push(retAdherence.EarlyMissedChartView);
                        earlyMissedData.push(retAdherence.EarlyMissedActiveTrackingPercent);
                        earlyMissedData.push(retAdherence.EarlyMissedTrackingOutcomePercent);

                        //late missed data

                        let lateMissedData = [];

                        lateMissedData.push(retAdherence.LateMissedPatient);
                        lateMissedData.push(retAdherence.LateMissedChartView);
                        lateMissedData.push(retAdherence.LateMissedActiveTrackingPercent);
                        lateMissedData.push(retAdherence.LateMissedTrackingOutcomePercent);

                        //unconfirmed  data

                        let unconfirmedData = [];

                        unconfirmedData.push(retAdherence.UnconfirmedPatient);
                        unconfirmedData.push(retAdherence.UnconfirmedChartView);
                        unconfirmedData.push(retAdherence.UnconfirmedActiveTrackingPercent);
                        unconfirmedData.push(retAdherence.UnconfirmedTrackingOutcomePercent);


                        //differential model of care data
                        //index testing data
                        let moc = data[0];
                        let mocData = [];


                        mocData.push(moc.MoCTXCurr);
                        mocData.push(moc.MoCTotalDSD);
                        mocData.push(moc.MoCPercentDevolved);
                        mocData.push(moc.MoCMonthScript);
                        mocData.push(moc.MoCFastTrack);
                        mocData.push(moc.MoCHouseHold);
                        mocData.push(moc.MoCAdolescent);






                        //viral load chart
                        Highcharts.chart('viralLoadChart', {

                            title: {
                                text: 'Viral Load Performance'
                            },

                            subtitle: {
                                text: 'Viral Load Cascade For the month in Review'
                            },

                            xAxis: {
                                categories: ['TXCurr', 'No of Eligible VL', 'No of Samples Collected', 'No. with Documented VL Result', 'No. with Suppressed VL Result'],
                                crosshair: true,
                            },

                            yAxis: {
                                min: 0,
                                title: {
                                    text: 'Indicator Values'
                                },
                                labels: {
                                    formatter: function () {
                                        return this.value;
                                    }
                                }
                            },

                            plotOptions: {
                                column: {
                                    pointPadding: 0.2,
                                    borderWidth: 0,
                                    colorByPoint: true
                                }
                            },

                            lang: {
                                decimalPoint: '.',
                                thousandsSep: ','
                            },



                            credits: false,


                            series: [{
                                type: 'column',
                                colorByPoint: true,
                                data: viralLoadData,
                                showInLegend: false
                            }],


                        });

                        //viral load table
                        $('#viralLoadTable tr:last')
                            .after(`<tr>
                                                        <td>${viralLoadData[0]}</td>
                                                        <td>${viralLoadData[1]}</td>
                                                        <td>${viralLoadData[2]}</td>
                                                        <td>${viralLoadData[3]}</td>
                                                        <td>${viralLoadData[4]}</td>
                                                        <td>${vl.ViralLoadCascadeSupPercent}</td>
                                                        </tr >`);

                        // unsuppressed viral load chart
                        Highcharts.chart('unsViralLoadChart', {
                            chart: {
                                type: 'column'
                            },
                            title: {
                                text: 'Unsuppressed Viral Load Performance'
                            },

                            subtitle: {
                                text: 'Unsuppressed Viral Load Cascade For the month in Review'
                            },

                            xAxis: {
                                title: {
                                    text: 'Age Cohorts'
                                },
                                categories: ['0-4', '5-9', '10-14', '15-19', '20-24', '24-29', '30-34', '35-39', '40-44', '45-49', '50+'],
                                crosshair: true,
                            },

                            yAxis: {
                                min: 0,
                                title: {
                                    text: 'Indicator Values'
                                },
                                labels: {
                                    formatter: function () {
                                        return this.value;
                                    }
                                }
                            },
                            tooltip: {
                                headerFormat: '<span style="font-size:10px">{point.key}</span><table>',
                                pointFormat: '<tr><td style="color:{series.color};padding:0">{series.name}: </td>' +
                                    '<td style="padding:0"><b>{point.y:.1f} </b></td></tr>',
                                footerFormat: '</table>',
                                shared: true,
                                useHTML: true
                            },

                            plotOptions: {
                                column: {
                                    pointPadding: 0.2,
                                    borderWidth: 0,

                                }
                            },

                            lang: {
                                decimalPoint: '.',
                                thousandsSep: ','
                            },



                            credits: false,


                            series: [{
                                name: ' No of Male',
                                data: [2]
                            }, {
                                name: 'No of Female',
                                data: [3]
                            }, {
                                name: 'No of Unsuppressed VL',
                                data: [5]
                            }, {
                                name: 'No of Commenced EAC',
                                data: [4]
                            }, {
                                name: 'No of Repeat VL',
                                data: [4]
                            }, {
                                name: 'No of Switched',
                                data: [8]
                            }]

                        });

                        //table
                        $('#unsViralLoadTable tr:last')
                            .after(`<tr>
                                                        <td>${unsuppressedViralLoadData[0]}</td>
                                                        <td>${unsuppressedViralLoadData[1]}</td>
                                                        <td>${unsuppressedViralLoadData[2]}</td>
                                                        <td>${unsuppressedViralLoadData[3]}</td>
                                                        <td>${unsuppressedViralLoadData[4]}</td>
                                                        <td>${unsuppressedViralLoadData[5]}</td>
                                                        <td>${unsuppressedViralLoadData[6]}</td>
                                                        </tr >`);

                        // Index Testing Chart
                        Highcharts.chart('indexTestingChart', {
                            chart: {
                                type: 'column'
                            },
                            title: {
                                text: 'Unsuppressed Viral Load Performance'
                            },

                            subtitle: {
                                text: 'Unsuppressed Viral Load Cascade For the month in Review'
                            },

                            xAxis: {
                                title: {
                                    text: ''
                                },
                                categories: ['% charts with partner(s) of index cases listed ', '% charts with ALL partners of index cases with known status', '% Partner status (POS) ', '% Partner status (NEG)', '% Partner status (UNK)', 'No of charts with children of index cases listed', 'No of charts with ALL children of index cases with known status', '% Child status (POS) ', '% Child status (NEG)', '% Child status (UNK)',],
                                crosshair: true,
                            },

                            yAxis: {
                                min: 0,
                                title: {
                                    text: 'Indicator Values'
                                },
                                labels: {
                                    formatter: function () {
                                        return this.value;
                                    }
                                }
                            },
                            tooltip: {
                                headerFormat: '<span style="font-size:10px">{point.key}</span><table>',
                                pointFormat: '<tr><td style="color:{series.color};padding:0">{series.name}: </td>' +
                                    '<td style="padding:0"><b>{point.y:.1f} </b></td></tr>',
                                footerFormat: '</table>',
                                shared: true,
                                useHTML: true
                            },

                            plotOptions: {
                                column: {
                                    pointPadding: 0.2,
                                    borderWidth: 0,

                                }
                            },

                            lang: {
                                decimalPoint: '.',
                                thousandsSep: ','
                            },




                            credits: false,


                            series: [{
                                type: 'column',
                                colorByPoint: true,
                                data: indexTestingData,
                                showInLegend: false

                            }


                            ]

                        });

                        //table
                        $('#indexTestingTable tr:last')
                            .after(`<tr>
                                                        <td>${totalIndexIdentified}</td>
                                                        <td>${indexTestingData[0]}</td>
                                                        <td>${indexTestingData[1]}</td>
                                                        <td>${indexTestingData[2]}</td>
                                                        <td>${indexTestingData[3]}</td>
                                                        <td>${indexTestingData[4]}</td>
                                                        <td>${indexTestingData[5]}</td>
                                                        <td>${indexTestingData[6]}</td>
                                                        <td>${indexTestingData[7]}</td>
                                                        <td>${indexTestingData[8]}</td>
                                                        <td>${indexTestingData[9]}</td>

                                                        </tr >`);


                        // retention adherence chart
                        Highcharts.chart('retentionAdherenceChart', {
                            chart: {
                                type: 'column',

                            },
                            title: {
                                text: 'Retention Adherence'
                            },

                            subtitle: {
                                text: 'Retention Adherence Chart Review'
                            },

                            xAxis: {
                                title: {
                                    text: 'Appointments'
                                },
                                categories: ['Early Missed Appointments ', 'Late Missed Appointments ', 'Unconfirmed LTFU'],
                                crosshair: true,
                            },

                            yAxis: {
                                min: 0,
                                title: {
                                    text: 'Indicator Values'
                                },
                                labels: {
                                    formatter: function () {
                                        return this.value;
                                    }
                                }
                            },
                            tooltip: {
                                headerFormat: '<span style="font-size:10px">{point.key}</span><table>',
                                pointFormat: '<tr><td style="color:{series.color};padding:0">{series.name}: </td>' +
                                    '<td style="padding:0"><b>{point.y:.1f} </b></td></tr>',
                                footerFormat: '</table>',
                                shared: true,
                                useHTML: true
                            },

                            plotOptions: {
                                column: {
                                    pointPadding: 0.2,
                                    borderWidth: 0,
                                    groupPadding: 0.1,

                                },
                                series: {
                                    pointWidth: 40
                                }
                            },

                            lang: {
                                decimalPoint: '.',
                                thousandsSep: ','
                            },



                            credits: false,

                            series: [{
                                name: ' No of patients reported in last month',
                                data: [earlyMissedData[0], lateMissedData[0], unconfirmedData[0]]
                            }, {
                                name: 'No of patient charts reviewed',
                                data: [earlyMissedData[1], lateMissedData[1], unconfirmedData[1]]
                            }, {
                                name: '(%) patient records with documented active tracking and tracing',
                                data: [earlyMissedData[2], lateMissedData[2], unconfirmedData[2]]
                            }, {
                                name: '(%) patient records with documented tracking and tracing outcome',
                                data: [earlyMissedData[3], lateMissedData[3], unconfirmedData[3]]
                            }
                            ]

                        });

                        //table
                        $('#retentionAdherenceTable tr:last')
                            .after(`            <tr>
                                                        <td>Early Missed Appointments (missed within 24hrs)</td>
                                                        <td>${earlyMissedData[0]}</td>
                                                        <td>${earlyMissedData[1]}</td>
                                                        <td>${earlyMissedData[2]}%</td>
                                                        <td>${earlyMissedData[3]}%</td>
                                                        </tr>

                                                        <tr>
                                                        <td>Late Missed Appointments (missed appointments for over a week)</td>
                                                        <td>${lateMissedData[0]}</td>
                                                        <td>${lateMissedData[1]}</td>
                                                        <td>${lateMissedData[2]}%</td>
                                                        <td>${lateMissedData[3]}%</td>
                                                        </tr>

                                                        <tr>
                                                        <td>Unconfirmed LTFU (Appointments missed over 4 weeks but not yet tracked or no information have been received about the patient)</td>
                                                        <td>${unconfirmedData[0]}</td>
                                                        <td>${unconfirmedData[1]}</td>
                                                        <td>${unconfirmedData[2]}</td>
                                                        <td>${unconfirmedData[3]}</td>
                                                        </tr>
                                `);


                        // TB/HIV chart
                        Highcharts.chart('tbHivChart', {
                            chart: {
                                type: 'column'
                            },
                            title: {
                                text: 'Tuberculosis / HIV Chart'
                            },

                            subtitle: {
                                text: 'TB/HIV Chart Review'
                            },

                            xAxis: {
                                title: {
                                    text: 'Patient Group'
                                },
                                categories: ['Adults starting ART ', 'Pregnant women starting ART', 'Patients who initiated TPT'],
                                crosshair: true,
                            },

                            yAxis: {
                                min: 0,
                                title: {
                                    text: 'Indicator Values'
                                },
                                labels: {
                                    formatter: function () {
                                        return this.value;
                                    }
                                }
                            },
                            tooltip: {
                                headerFormat: '<span style="font-size:10px">{point.key}</span><table>',
                                pointFormat: '<tr><td style="color:{series.color};padding:0">{series.name}: </td>' +
                                    '<td style="padding:0"><b>{point.y:.1f} </b></td></tr>',
                                footerFormat: '</table>',
                                shared: true,
                                useHTML: true
                            },

                            plotOptions: {
                                column: {
                                    pointPadding: 0.2,
                                    borderWidth: 0,
                                    groupPadding: 0.1,

                                },
                                series: {
                                    pointWidth: 35
                                }
                            },

                            lang: {
                                decimalPoint: '.',
                                thousandsSep: ','
                            },



                            credits: false,


                            series: [{
                                name: ' No of charts reviewed',
                                data: [2, 3, 7]
                            }, {
                                name: '% with TB screening documented at most recent visit (Patient chart)',
                                data: [3, 12, 5]
                            }, {
                                name: '% eligible for TPT (Patient chart)',
                                data: [5, 7, 30]
                            }, {
                                name: '% started on TPT (Patient chart)',
                                data: [4, 12, 23]
                            },
                            {
                                name: '% started on TPT (IPT register / EMR)',
                                data: [41, 112, 223]
                            },
                            {
                                name: '% that completed TPT (Patient chart)',
                                data: [21, 92, 123]
                            }
                            ]

                        });

                        //table
                        $('#tbHivTable tr:last')
                            .after(`            <tr>
                                                        <td>Adults starting ART</td>
                                                        <td>${"Feb"}</td>
                                                        <td>${2}</td>
                                                        <td>${3}</td>
                                                        <td>${5}</td>
                                                        <td>${4}</td>
                                                        <td>${41}</td>
                                                        <td>${21}</td>
                                                        </tr>

                                                        <tr>
                                                        <td>Pregnant women starting ART</td>
                                                        <td>${"Feb"}</td>
                                                        <td>${3}</td>
                                                        <td>${12}</td>
                                                        <td>${7}</td>
                                                        <td>${12}</td>
                                                        <td>${112}</td>
                                                        <td>${92}</td>                                                </tr>

                                                        <tr>
                                                        <td>Patients who initiated TPT</td>
                                                        <td>${"Feb"}</td>
                                                        <td>${7}</td>
                                                        <td>${5}</td>
                                                        <td>${30}</td>
                                                        <td>${23}</td>
                                                        <td>${223}</td>
                                                        <td>${123}</td>
                                                        </tr>
                                `);



                        //Differential Model of Care Chart
                        Highcharts.chart('diffModelCareChart', {

                            title: {
                                text: 'Differential Model of Care Chart'
                            },

                            subtitle: {
                                text: 'Differential Model of Care Chart'
                            },

                            xAxis: {
                                categories: ['TXCurr', 'Total on DSD', '% Devolved ', 'Multi-month Scripting', 'Fast Track', 'Household Led', 'Adolescent Model'],
                                crosshair: true,
                            },

                            yAxis: {
                                min: 0,
                                title: {
                                    text: 'Indicator Values'
                                },
                                labels: {
                                    formatter: function () {
                                        return this.value;
                                    }
                                }
                            },

                            plotOptions: {
                                column: {
                                    pointPadding: 0.2,
                                    borderWidth: 0,
                                    colorByPoint: true
                                }
                            },

                            lang: {
                                decimalPoint: '.',
                                thousandsSep: ','
                            },



                            credits: false,


                            series: [{
                                type: 'column',
                                colorByPoint: true,
                                data: mocData,
                                showInLegend: false
                            }]

                        });

                        //diff table
                        $('#diffModelCareTable tr:last')
                            .after(`<tr>
                                                        <td>${mocData[0]}</td>
                                                        <td>${mocData[1]}</td>
                                                        <td>${mocData[2]}</td>
                                                        <td>${mocData[3]}</td>
                                                        <td>${mocData[4]}</td>
                                                        <td>${mocData[5]}</td>
                                                        <td>${mocData[6]}</td>
                                                        </tr >`);



                    }
                });
            }

            loadData();

        });


    </script>
}