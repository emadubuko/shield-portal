@using ShieldPortal.ViewModel;

@model List<DQAAnalysisModel>

@{
    Layout = "~/Views/Shared/_dqaFY18Q2layout.cshtml";
}


@section AddToHead{
    <style>
        table.dataTable tbody th, table.dataTable tbody td {
            padding: 0px 10px;
        }

        .table > tbody > tr > td, .table > tbody > tr > th, .table > tfoot > tr > td, .table > tfoot > tr > th, .table > thead > tr > td, .table > thead > tr > th {
            padding: 1px;
            line-height: 1.42857143;
            vertical-align: middle;
        }

        .table td {
            text-align: center;
        }

        .table th {
            text-align: center;
        }

        table.dataTable > thead > tr > th, table.dataTable th {
            position: initial;
        }

        th.rotate {
            /* Something you can count on */
            height: 140px;
            white-space: nowrap;
        }

            th.rotate > div {
                transform: translate(25px, 51px) rotate(270deg);
                width: 10px;
                margin-right: 25px;
                height: 55px;
            }
    </style>
    <script type="text/javascript">
        function reloadPage(e) {
            window.location.replace('/DQAFY2018Q2/DQAAnalysisReport?type=' + e.value);
        }
    </script>
}

<h4 style="text-align: center;color: cornflowerblue;text-decoration: underline;"> FY 2018 Q2 DQA Analysis </h4>

<div class="col-sm-9">
    <div class="row">
        <div class="col-sm-3" style="margin-bottom: 10px;">
            <select id="rpt_type" onchange="reloadPage(this)" class="form-control">
                <option value="Partners">Partner's Report</option>
                <option value="UMB">UMB's Report</option>
            </select>
        </div>
    </div>

    <div class="table-responsive" style="overflow-x: initial;font-size: 12px;">
        <table class="table table-striped table-bordered table-hover" id="output">
            <thead>
                <tr>
                    <th style="background-color:darkcyan; color:#fff; font-weight:bold;padding: 10px;">IP </th>
                    <th style="background-color:darkcyan; color:#fff; font-weight:bold;padding: 10px;">Facility</th>
                    <th style="background-color:darkcyan; color:#fff; font-weight:bold;padding: 10px;">Org Unit</th>

                    <th class="rotate" style="color:black;font-weight:bold; border-left-width:medium;border-left-color:black;"><div>DQA FY18 Q2 <br /> (HTC_TST)</div></th>
                    <th class="rotate" style="color:black;font-weight:bold;"><div>Validated <br /> (HTC_TST)</div></th>
                    <th class="rotate" style="color:black;font-weight:bold;"><div>Concurrence<br /> (HTC_TST)</div></th>

                    <th class="rotate" style="color:black;font-weight:bold; border-left-width:medium;border-left-color:black"><div>DQA FY18 Q2 <br /> (PMTCT_STAT)</div></th>
                    <th class="rotate" style="color:black;font-weight:bold;"><div>Validated<br /> (PMTCT_STAT</div></th>
                    <th class="rotate" style="color:black;font-weight:bold;"><div>Concurrence<br /> (PMTCT_STAT)</div></th>

                    <th class="rotate" style="color:black;font-weight:bold; border-left-width:medium;border-left-color:black"><div>DQA FY18 Q2<br /> (PMTCT_ART)</div></th>
                    <th class="rotate" style="color:black;font-weight:bold;"><div>Validated<br /> (PMTCT_ART)</div></th>
                    <th class="rotate" style="color:black;font-weight:bold;"><div>Concurrence<br /> (PMTCT_ART)</div></th>


                    <th class="rotate" style="color:black;font-weight:bold; border-left-width:medium;border-left-color:black"><div>DQA FY18 Q2<br /> (PMTCT_EID)</div></th>
                    <th class="rotate" style="color:black;font-weight:bold;"><div>Validated<br /> (PMTCT_EID)</div></th>
                    <th class="rotate" style="color:black;font-weight:bold;"><div>Concurrence<br /> (PMTCT_EID)</div></th>


                    <th class="rotate" style="color:black;font-weight:bold; border-left-width:medium;border-left-color:black"><div>DQA FY18 Q2<br /> (TX_NEW)</div></th>
                    <th class="rotate" style="color:black;font-weight:bold;"><div>Validated<br /> (TX_NEW)</div></th>
                    <th class="rotate" style="color:black;font-weight:bold;"><div>Concurrence<br /> (TX_NEW)</div></th>

                    <th class="rotate" style="color:black;font-weight:bold; border-left-width:medium;border-left-color:black"><div>DQA FY18 Q2<br /> (TX_CURR)</div></th>
                    <th class="rotate" style="color:black;font-weight:bold;"><div>Validated<br /> (TX_CURR)</div></th>
                    <th class="rotate" style="color:black;font-weight:bold;"><div>Concurrence<br /> (TX_CURR)</div></th>

                    <th class="rotate" style="color:black;font-weight:bold; border-left-width:medium;border-left-color:black"><div>DQA FY18 Q2<br /> (PMTCT_HEI_POS)</div></th>
                    <th class="rotate" style="color:black;font-weight:bold;"><div>Validated<br /> (PMTCT_HEI_POS)</div></th>
                    <th class="rotate" style="color:black;font-weight:bold;"><div>Concurrence<br /> (PMTCT_HEI_POS)</div></th>

                    <th class="rotate" style="color:black;font-weight:bold; border-left-width:medium;border-left-color:black"><div>DQA FY17 Q4<br /> (TB_STAT)</div></th>
                    <th class="rotate" style="color:black;font-weight:bold;"><div>Validated<br /> (TB_STAT)</div></th>
                    <th class="rotate" style="color:black;font-weight:bold;"><div>Concurrence<br /> (TB_STAT)</div></th>

                    <th class="rotate" style="color:black;font-weight:bold; border-left-width:medium;border-left-color:black"><div>DQA FY17 Q4<br /> (TB_ART)</div></th>
                    <th class="rotate" style="color:black;font-weight:bold;"><div>Validated<br /> (TB_ART)</div></th>
                    <th class="rotate" style="color:black;font-weight:bold;"><div>Concurrence<br /> (TB_ART)</div></th>

                    <th class="rotate" style="color:black;font-weight:bold; border-left-width:medium;border-left-color:black"><div>DQA FY17 Q4<br /> (TX_TB)</div></th>
                    <th class="rotate" style="color:black;font-weight:bold;"><div>Validated<br /> (TX_TB)</div></th>
                    <th class="rotate" style="color:black;font-weight:bold;"><div>Concurrence<br /> (TX_TB)</div></th>

                    <th class="rotate" style="background-color:darkcyan; color:#fff; font-weight:bold"><div>Count Fails</div></th>
                </tr>
            </thead>
            <tbody>
                @if (Model != null && Model.Count() > 0)
                {
                    foreach (DQAAnalysisModel dr in Model)
                    {
                        int failCount = 0;
                        <tr>
                            <td>@dr.IP</td>
                            <td>@dr.Facility</td>
                            <td>@string.Format("{0} {1}", dr.State_name.Substring(0, 2), dr.Lga_name)</td>

                            <td style="border-left-width:medium;border-left-color:black">@dr.HTC</td>
                            <td>@dr.Validate_HTC</td>
                            @if (dr.HTC == "#DIV/0!") //dr[4] == null || dr[4].ToString() == "#DIV/0!")
                            {
                                <td>@dr.Concurrence_rate_HTC</td>
                            }
                            else
                            {
                                bool green = true;
                                double conc = 0;
                                double dtm = 0, validatn = 0;
                                double.TryParse(dr.HTC, out dtm);
                                double.TryParse(dr.Validate_HTC, out validatn);
                                if (dtm == 0 && validatn == 0)
                                {
                                    conc = 100;
                                }
                                else if (validatn == 0)
                                {
                                    conc = 0;
                                }
                                else
                                {
                                    conc = 100 * (validatn / dtm);
                                }
                                if (conc < 95 || conc > 105)
                                {
                                    failCount += 1;
                                    green = false;
                                }
                                <td style=@(green ? "background-color:limegreen;color:#fff" : "background-color:red;color:#fff")>@conc.ToString("N2") %</td>
                            }

                            <td style="border-left-width:medium;border-left-color:black">@dr.PMTCT_STAT</td>
                            <td>@dr.Validate_PMTCT_STAT</td>
                            @if (dr.PMTCT_STAT == "#DIV/0!")
                            {
                                <td>@dr.Concurrence_rate_PMTCT_STAT</td>
                            }
                            else
                            {
                                bool green = true;
                                double conc = 0;
                                double dtm = 0, validatn = 0;
                                double.TryParse(dr.PMTCT_STAT, out dtm);
                                double.TryParse(dr.Validate_PMTCT_STAT, out validatn);
                                if (dtm == 0 && validatn == 0)
                                {
                                    conc = 100;
                                }
                                else if (validatn == 0)
                                {
                                    conc = 0;
                                }
                                else
                                {
                                    conc = 100 * (validatn / dtm);
                                }
                                if (conc < 95 || conc > 105)
                                {
                                    failCount += 1;
                                    green = false;
                                }
                                <td style=@(green ? "background-color:limegreen;color:#fff" : "background-color:red;color:#fff")>@conc.ToString("N2") %</td>
                            }

                            <td style="border-left-width:medium;border-left-color:black">@dr.PMTCT_ART</td>
                            <td>@dr.Validate_PMTCT_ART</td>
                            @if (dr.PMTCT_ART == "#DIV/0!")
                            {
                                <td>@dr.Concurrence_rate_PMTCT_ART</td>
                            }
                            else
                            {
                                bool green = true;
                                double conc = 0;
                                double dtm = 0, validatn = 0;
                                double.TryParse(dr.PMTCT_ART, out dtm);
                                double.TryParse(dr.Validate_PMTCT_ART, out validatn);
                                if (dtm == 0 && validatn == 0)
                                {
                                    conc = 100;
                                }
                                else if (validatn == 0)
                                {
                                    conc = 0;
                                }
                                else
                                {
                                    conc = 100 * (validatn / dtm);
                                }
                                if (conc < 95 || conc > 105)
                                {
                                    failCount += 1;
                                    green = false;
                                }
                                <td style=@(green ? "background-color:limegreen;color:#fff" : "background-color:red;color:#fff")>@conc.ToString("N2") %</td>
                            }

                            <td style="border-left-width:medium;border-left-color:black">@dr.PMTCT_EID</td>
                            <td>@dr.Validate_PMTCT_EID</td>
                            @if (dr.PMTCT_EID == "#DIV/0!")
                            {
                                <td>@dr.Concurrence_rate_PMTCT_EID</td>
                            }
                            else
                            {
                                bool green = true;
                                double conc = 0;
                                double dtm = 0, validatn = 0;
                                double.TryParse(dr.PMTCT_EID, out dtm);
                                double.TryParse(dr.Validate_PMTCT_EID, out validatn);
                                if (dtm == 0 && validatn == 0)
                                {
                                    conc = 100;
                                }
                                else if (validatn == 0)
                                {
                                    conc = 0;
                                }
                                else
                                {
                                    conc = 100 * (validatn / dtm); //Convert.ToDouble(dr[4] );
                                }
                                if (conc < 95 || conc > 105)
                                {
                                    failCount += 1;
                                    green = false;
                                }
                                <td style=@(green ? "background-color:limegreen;color:#fff" : "background-color:red;color:#fff")>@conc.ToString("N2") %</td>
                            }
                            <td style="border-left-width:medium;border-left-color:black">@dr.TX_NEW</td>
                            <td>@dr.Validate_TX_NEW</td>
                            @if (dr.TX_NEW == "#DIV/0!")
                            {
                                <td>@dr.Concurrence_rate_TX_Curr</td>
                            }
                            else
                            {
                                bool green = true;
                                double conc = 0;
                                double dtm = 0, validatn = 0;
                                double.TryParse(dr.TX_NEW, out dtm);
                                double.TryParse(dr.Validate_TX_NEW, out validatn);
                                if (dtm == 0 && validatn == 0)
                                {
                                    conc = 100;
                                }
                                else if (validatn == 0)
                                {
                                    conc = 0;
                                }
                                else
                                {
                                    conc = 100 * (validatn / dtm); //Convert.ToDouble(dr[4] );
                                }
                                if (conc < 95 || conc > 105)
                                {
                                    failCount += 1;
                                    green = false;
                                }
                                <td style=@(green ? "background-color:limegreen;color:#fff" : "background-color:red;color:#fff")>@conc.ToString("N2") %</td>
                            }

                            <td style="border-left-width:medium;border-left-color:black">@dr.TX_Curr</td>
                            <td>@dr.Validate_TX_Curr</td>
                            @if (dr.TX_Curr == "#DIV/0!")
                            {
                                <td>@dr.Concurrence_rate_TX_Curr</td>
                            }
                            else
                            {
                                bool green = true;
                                double conc = 0;
                                double dtm = 0, validatn = 0;
                                double.TryParse(dr.TX_Curr, out dtm);
                                double.TryParse(dr.Validate_TX_Curr, out validatn);
                                if (dtm == 0 && validatn == 0)
                                {
                                    conc = 100;
                                }
                                else if (validatn == 0)
                                {
                                    conc = 0;
                                }
                                else
                                {
                                    conc = 100 * (validatn / dtm); //Convert.ToDouble(dr[4] );
                                }
                                if (conc < 95 || conc > 105)
                                {
                                    failCount += 1;
                                    green = false;
                                }
                                <td style=@(green ? "background-color:limegreen;color:#fff" : "background-color:red;color:#fff")>@conc.ToString("N2") %</td>
                            }

                            <td style="border-left-width:medium;border-left-color:black">@dr.PMTCT_HEI_POS</td>
                            <td>@dr.Validate_PMTCT_HEI_POS</td>
                            @if (dr.PMTCT_HEI_POS == "#DIV/0!")
                            {
                                <td>@dr.Concurrence_rate_PMTCT_HEI_POS</td>
                            }
                            else
                            {
                                bool green = true;
                                double conc = 0;
                                double dtm = 0, validatn = 0;
                                double.TryParse(dr.PMTCT_HEI_POS, out dtm);
                                double.TryParse(dr.Validate_PMTCT_HEI_POS, out validatn);
                                if (dtm == 0 && validatn == 0)
                                {
                                    conc = 100;
                                }
                                else if (validatn == 0)
                                {
                                    conc = 0;
                                }
                                else
                                {
                                    conc = 100 * (validatn / dtm); //Convert.ToDouble(dr[4] );
                                }
                                if (conc < 95 || conc > 105)
                                {
                                    failCount += 1;
                                    green = false;
                                }
                                <td style=@(green ? "background-color:limegreen;color:#fff" : "background-color:red;color:#fff")>@conc.ToString("N2") %</td>
                            }

                            <td style="border-left-width:medium;border-left-color:black">@dr.TB_STAT</td>
                            <td>@dr.Validate_TB_STAT</td>
                            @if (dr.TB_STAT == "#DIV/0!")
                            {
                                <td>@dr.Concurrence_rate_TB_STAT</td>
                            }
                            else
                            {
                                bool green = true;
                                double conc = 0;
                                double dtm = 0, validatn = 0;
                                double.TryParse(dr.TB_STAT, out dtm);
                                double.TryParse(dr.Validate_TB_STAT, out validatn);
                                if (dtm == 0 && validatn == 0)
                                {
                                    conc = 100;
                                }
                                else if (validatn == 0)
                                {
                                    conc = 0;
                                }
                                else
                                {
                                    conc = 100 * (validatn / dtm);
                                }
                                if (conc < 95 || conc > 105)
                                {
                                    failCount += 1;
                                    green = false;
                                }
                                <td style=@(green ? "background-color:limegreen;color:#fff" : "background-color:red;color:#fff")>@conc.ToString("N2") %</td>
                            }

                            <td style="border-left-width:medium;border-left-color:black">@dr.TB_ART</td>
                            <td>@dr.Validate_TB_ART</td>
                            @if (dr.TB_ART == "#DIV/0!")
                            {
                                <td>@dr.Concurrence_rate_TB_ART</td>
                            }
                            else
                            {
                                bool green = true;
                                double conc = 0;
                                double dtm = 0, validatn = 0;
                                double.TryParse(dr.TB_ART, out dtm);
                                double.TryParse(dr.Validate_TB_ART, out validatn);
                                if (dtm == 0 && validatn == 0)
                                {
                                    conc = 100;
                                }
                                else if (validatn == 0)
                                {
                                    conc = 0;
                                }
                                else
                                {
                                    conc = 100 * (validatn / dtm);
                                }
                                if (conc < 95 || conc > 105)
                                {
                                    failCount += 1;
                                    green = false;
                                }
                                <td style=@(green ? "background-color:limegreen;color:#fff" : "background-color:red;color:#fff")>@conc.ToString("N2") %</td>
                            }

                            <td style="border-left-width:medium;border-left-color:black">@dr.TX_TB</td>
                            <td>@dr.Validate_TX_TB</td>
                            @if (dr.TX_TB == "#DIV/0!")
                            {
                                <td>@dr.Concurrence_rate_TX_TB</td>
                            }
                            else
                            {
                                bool green = true;
                                double conc = 0;
                                double dtm = 0, validatn = 0;
                                double.TryParse(dr.TX_TB, out dtm);
                                double.TryParse(dr.Validate_TX_TB, out validatn);
                                if (dtm == 0 && validatn == 0)
                                {
                                    conc = 100;
                                }
                                else if (validatn == 0)
                                {
                                    conc = 0;
                                }
                                else
                                {
                                    conc = 100 * (validatn / dtm);
                                }
                                if (conc < 95 || conc > 105)
                                {
                                    failCount += 1;
                                    green = false;
                                }
                                <td style=@(green ? "background-color:limegreen;color:#fff" : "background-color:red;color:#fff")>@conc.ToString("N2") %</td>
                            }

                            <td>@failCount</td>
                        </tr>
                    }
                }
            </tbody>

        </table>
    </div>
</div>



@section Scripts
{
    <script src="~/plugins/datatables/js/jszip.min.js"></script>
    <script src="~/plugins/datatables/js/pdfmake.min.js"></script>
    <script src="~/plugins/datatables/js/vfs_fonts.js"></script>
    <script src="~/plugins/datatables/extensions/Buttons/js/buttons.print.min.js"></script>
    <script src="~/Scripts/Ultilities.js?v=@DateTime.Now.Ticks.ToString()"></script>
    <script>
        $(document).ready(function () {
            $('.table').DataTable({
                "iDisplayLength": 100,
                dom: 'Bfrtip',
                buttons: [
                    {
                        extend: 'print',
                        text: 'Zoom Table',
                        autoPrint: false,
                        title: "FY 2018 Q2 DQA Report"
                    },
                    {
                        text: 'Export to Excel',
                        extend: 'excelHtml5',
                        exportOptions: {
                            columns: ':visible'
                        }
                    },
                    //{
                    //    extend: 'pdfHtml5',
                    //    exportOptions: {
                    //        columns: ':visible'
                    //    }
                    //}
                ]
            });

            var report_type = window.location.href.split('?type=')[1];
            $("#rpt_type").val(report_type);


            $("#save_download").on('click', function (event) {
                exportTableToCSV.apply(this, [$('#output'), 'Concurrence report.csv']);
            });

        });
    </script>
}

