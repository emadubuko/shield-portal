@model System.Data.DataTable
@{    
    Layout = "~/Views/Shared/_dqaFY17Q4layout.cshtml";
}


@section AddToHead{
    <style>
        .title {
            font-weight: 600;
            color: #000;
            padding-left: 10px;
        }

        table.dataTable tbody th, table.dataTable tbody td {
            padding: 0px 10px;
        }

        .table > tbody > tr > td, .table > tbody > tr > th, .table > tfoot > tr > td, .table > tfoot > tr > th, .table > thead > tr > td, .table > thead > tr > th {
            padding: 1px;
            line-height: 1.42857143;
            vertical-align: middle;
        }

        .table td {
            text-align: center;
        }

        .table th {
            text-align: center;
        }

        table.dataTable > thead > tr > th, table.dataTable th {
            position: initial;
        }

        th.rotate {
            /* Something you can count on */
            height: 140px;
            white-space: nowrap;
        }

            th.rotate > div {
                transform: translate(25px, 51px) rotate(270deg);
                width: 10px;
                margin-right: 25px;
                height: 55px;
            }
    </style>
<script type="text/javascript">
        function reloadPage(e) {
            window.location.replace('/DQAFY2017Q4/DQAAnalysisReport?type=' + e.value);
        }
</script>
}

<h4 style="text-align: center;color: cornflowerblue;text-decoration: underline;"> FY 2017 Q4 DQA Analysis </h4>

<div class="col-sm-9">
    <div class="row">
        <div class="col-sm-2" style="margin-bottom: 10px;">
            <select id="rpt_type" onchange="reloadPage(this)" class="form-control">
                <option value="Partners">Partner's Report</option>
                <option value="UMB">UMB's Report</option>
            </select>
        </div>
    </div>

    <div class="table-responsive" style="overflow-x: initial;font-size: 12px;">        
        <table class="table table-striped table-bordered table-hover">
            <thead>
                <tr>
                    <th style="background-color:darkcyan; color:#fff; font-weight:bold">IP </th>
                    <th style="background-color:darkcyan; color:#fff; font-weight:bold">Facility</th>

                    <th class="rotate" style="color:black;font-weight:bold; border-left-width:medium;border-left-color:black;"><div>DQA FY17 Q4 <br /> (HTC_TST)</div></th>
                    <th class="rotate" style="color:black;font-weight:bold;"><div>Validated <br /> (HTC_TST)</div></th>
                    <th class="rotate" style="color:black;font-weight:bold;"><div>Concurrence<br /> (HTC_TST)</div></th>

                    <th class="rotate" style="color:black;font-weight:bold; border-left-width:medium;border-left-color:black"><div>DQA FY17 Q4 <br /> (PMTCT_STAT)</div></th>
                    <th class="rotate" style="color:black;font-weight:bold;"><div>Validated<br /> (PMTCT_STAT</div></th>
                    <th class="rotate" style="color:black;font-weight:bold;"><div>Concurrence<br /> (PMTCT_STAT)</div></th>

                    <th class="rotate" style="color:black;font-weight:bold; border-left-width:medium;border-left-color:black"><div>DQA FY17 Q4<br /> (PMTCT_ART)</div></th>
                    <th class="rotate" style="color:black;font-weight:bold;"><div>Validated<br /> (PMTCT_ART)</div></th>
                    <th class="rotate" style="color:black;font-weight:bold;"><div>Concurrence<br /> (PMTCT_ART)</div></th>


                    <th class="rotate" style="color:black;font-weight:bold; border-left-width:medium;border-left-color:black"><div>DQA FY17 Q4<br /> (PMTCT_EID)</div></th>
                    <th class="rotate" style="color:black;font-weight:bold;"><div>Validated<br /> (PMTCT_EID)</div></th>
                    <th class="rotate" style="color:black;font-weight:bold;"><div>Concurrence<br /> (PMTCT_EID)</div></th>
                     

                    <th class="rotate" style="color:black;font-weight:bold; border-left-width:medium;border-left-color:black"><div>DQA FY17 Q4<br /> (TX_NEW)</div></th>
                    <th class="rotate" style="color:black;font-weight:bold;"><div>Validated<br /> (TX_NEW)</div></th>
                    <th class="rotate" style="color:black;font-weight:bold;"><div>Concurrence<br /> (TX_NEW)</div></th>

                    <th class="rotate" style="color:black;font-weight:bold; border-left-width:medium;border-left-color:black"><div>DQA FY17 Q4<br /> (TX_CURR)</div></th>
                    <th class="rotate" style="color:black;font-weight:bold;"><div>Validated<br /> (TX_CURR)</div></th>
                    <th class="rotate" style="color:black;font-weight:bold;"><div>Concurrence<br /> (TX_CURR)</div></th>

                    <th class="rotate" style="color:black;font-weight:bold; border-left-width:medium;border-left-color:black"><div>DQA FY17 Q4<br /> (TB_STAT)</div></th>
                    <th class="rotate" style="color:black;font-weight:bold;"><div>Validated<br /> (TB_STAT)</div></th>
                    <th class="rotate" style="color:black;font-weight:bold;"><div>Concurrence<br /> (TB_STAT)</div></th>

                    <th class="rotate" style="color:black;font-weight:bold; border-left-width:medium;border-left-color:black"><div>DQA FY17 Q4<br /> (TB_ART)</div></th>
                    <th class="rotate" style="color:black;font-weight:bold;"><div>Validated<br /> (TB_ART)</div></th>
                    <th class="rotate" style="color:black;font-weight:bold;"><div>Concurrence<br /> (TB_ART)</div></th>

                    <th class="rotate" style="color:black;font-weight:bold; border-left-width:medium;border-left-color:black"><div>DQA FY17 Q4<br /> (TX_TB)</div></th>
                    <th class="rotate" style="color:black;font-weight:bold;"><div>Validated<br /> (TX_TB)</div></th>
                    <th class="rotate" style="color:black;font-weight:bold;"><div>Concurrence<br /> (TX_TB)</div></th>

                    <th class="rotate" style="color:black;font-weight:bold; border-left-width:medium;border-left-color:black"><div>DQA FY17 Q4<br /> (PMTCT_FO)</div></th>
                    <th class="rotate" style="color:black;font-weight:bold;"><div>Validated<br /> (PMTCT_FO)</div></th>
                    <th class="rotate" style="color:black;font-weight:bold;"><div>Concurrence<br /> (PMTCT_FO)</div></th>

                    <th class="rotate" style="background-color:darkcyan; color:#fff; font-weight:bold"><div>Count Fails</div></th>
                </tr>
            </thead>
            <tbody>
                @if (Model !=null && Model.Rows != null && Model.Rows.Count > 0)
                {
                    foreach (System.Data.DataRow dr in Model.Rows)
                    {
                        int failCount = 0;
                        <tr>
                            <td>@dr[0]</td>
                            <td>@dr[1]</td>

                            <td style="border-left-width:medium;border-left-color:black">@dr[2]</td>
                            <td>@dr[3]</td>
                            @if (dr[2].ToString() == "#DIV/0!") //dr[4] == null || dr[4].ToString() == "#DIV/0!")
                            {
                                <td>@dr[4]</td>
                            }
                            else
                            {
                                bool green = true;
                                double conc = 0;
                                double dtm = 0, validatn = 0;
                                double.TryParse(dr[2].ToString(), out dtm);
                                double.TryParse(dr[3].ToString(), out validatn);
                                if (dtm == 0 && validatn == 0)
                                {
                                    conc = 100;
                                }
                                else if (validatn == 0)
                                {
                                    conc = 0;
                                }
                                else
                                {
                                    conc = 100 * (validatn / dtm);
                                }
                                if (conc < 95 || conc > 105)
                                {
                                    failCount += 1;
                                    green = false;
                                }
                                <td style=@(green ? "background-color:limegreen;color:#fff" : "background-color:red;color:#fff")>@conc.ToString("N2") %</td>
                            }

                            <td style="border-left-width:medium;border-left-color:black">@dr[5]</td>
                            <td>@dr[6]</td>
                            @if (dr[5].ToString() == "#DIV/0!")
                            {
                                <td>@dr[7]</td>
                            }
                            else
                            {
                                bool green = true;
                                double conc = 0;
                                double dtm = 0, validatn = 0;
                                double.TryParse(dr[5].ToString(), out dtm);
                                double.TryParse(dr[6].ToString(), out validatn);
                                if (dtm == 0 && validatn == 0)
                                {
                                    conc = 100;
                                }
                                else if (validatn == 0)
                                {
                                    conc = 0;
                                }
                                else
                                {
                                    conc = 100 * (validatn / dtm);
                                }
                                if (conc < 95 || conc > 105)
                                {
                                    failCount += 1;
                                    green = false;
                                }
                                <td style=@(green ? "background-color:limegreen;color:#fff" : "background-color:red;color:#fff")>@conc.ToString("N2") %</td>
                            }

                            <td style="border-left-width:medium;border-left-color:black">@dr[8]</td>
                            <td>@dr[9]</td>
                            @if (dr[8].ToString() == "#DIV/0!")
                            {
                                <td>@dr[10]</td>
                            }
                            else
                            {
                                bool green = true;
                                double conc = 0;
                                double dtm = 0, validatn = 0;
                                double.TryParse(dr[8].ToString(), out dtm);
                                double.TryParse(dr[9].ToString(), out validatn);
                                if (dtm == 0 && validatn == 0)
                                {
                                    conc = 100;
                                }
                                else if (validatn == 0)
                                {
                                    conc = 0;
                                }
                                else
                                {
                                    conc = 100 * (validatn / dtm);
                                }
                                if (conc < 95 || conc > 105)
                                {
                                    failCount += 1;
                                    green = false;
                                }
                                <td style=@(green ? "background-color:limegreen;color:#fff" : "background-color:red;color:#fff")>@conc.ToString("N2") %</td>
                            }

                            <td style="border-left-width:medium;border-left-color:black">@dr[11]</td>
                            <td>@dr[12]</td>
                            @if (dr[11].ToString() == "#DIV/0!")
                            {
                                <td>@dr[13]</td>
                            }
                            else
                            {
                                bool green = true;
                                double conc = 0;
                                double dtm = 0, validatn = 0;
                                double.TryParse(dr[11].ToString(), out dtm);
                                double.TryParse(dr[12].ToString(), out validatn);
                                if (dtm == 0 && validatn == 0)
                                {
                                    conc = 100;
                                }
                                else if (validatn == 0)
                                {
                                    conc = 0;
                                }
                                else
                                {
                                    conc = 100 * (validatn / dtm); //Convert.ToDouble(dr[4] );
                                }
                                if (conc < 95 || conc > 105)
                                {
                                    failCount += 1;
                                    green = false;
                                }
                                <td style=@(green ? "background-color:limegreen;color:#fff" : "background-color:red;color:#fff")>@conc.ToString("N2") %</td>
                            }
                            <td style="border-left-width:medium;border-left-color:black">@dr[14]</td>
                            <td>@dr[15]</td>
                            @if (dr[14].ToString() == "#DIV/0!")
                            {
                                <td>@dr[16]</td>
                            }
                            else
                            {
                                bool green = true;
                                double conc = 0;
                                double dtm = 0, validatn = 0;
                                double.TryParse(dr[14].ToString(), out dtm);
                                double.TryParse(dr[15].ToString(), out validatn);
                                if (dtm == 0 && validatn == 0)
                                {
                                    conc = 100;
                                }
                                else if (validatn == 0)
                                {
                                    conc = 0;
                                }
                                else
                                {
                                    conc = 100 * (validatn / dtm); //Convert.ToDouble(dr[4] );
                                }
                                if (conc < 95 || conc > 105)
                                {
                                    failCount += 1;
                                    green = false;
                                }
                                <td style=@(green ? "background-color:limegreen;color:#fff" : "background-color:red;color:#fff")>@conc.ToString("N2") %</td>
                            }

                            <td style="border-left-width:medium;border-left-color:black">@dr[17]</td>
                            <td>@dr[18]</td>
                            @if (dr[17].ToString() == "#DIV/0!")
                            {
                                <td>@dr[19]</td>
                            }
                            else
                            {
                                bool green = true;
                                double conc = 0;
                                double dtm = 0, validatn = 0;
                                double.TryParse(dr[17].ToString(), out dtm);
                                double.TryParse(dr[18].ToString(), out validatn);
                                if (dtm == 0 && validatn == 0)
                                {
                                    conc = 100;
                                }
                                else if (validatn == 0)
                                {
                                    conc = 0;
                                }
                                else
                                {
                                    conc = 100 * (validatn / dtm); //Convert.ToDouble(dr[4] );
                                }
                                if (conc < 95 || conc > 105)
                                {
                                    failCount += 1;
                                    green = false;
                                }
                                <td style=@(green ? "background-color:limegreen;color:#fff" : "background-color:red;color:#fff")>@conc.ToString("N2") %</td>
                            }

                            @*hlhlk*@


                            <td style="border-left-width:medium;border-left-color:black">@dr[20]</td>
                            <td>@dr[21]</td>
                            @if (dr[20].ToString() == "#DIV/0!")
                            {
                                <td>@dr[22]</td>
                            }
                            else
                            {
                                bool green = true;
                                double conc = 0;
                                double dtm = 0, validatn = 0;
                                double.TryParse(dr[20].ToString(), out dtm);
                                double.TryParse(dr[21].ToString(), out validatn);
                                if (dtm == 0 && validatn == 0)
                                {
                                    conc = 100;
                                }
                                else if (validatn == 0)
                                {
                                    conc = 0;
                                }
                                else
                                {
                                    conc = 100 * (validatn / dtm); //Convert.ToDouble(dr[4] );
                                }
                                if (conc < 95 || conc > 105)
                                {
                                    failCount += 1;
                                    green = false;
                                }
                                <td style=@(green ? "background-color:limegreen;color:#fff" : "background-color:red;color:#fff")>@conc.ToString("N2") %</td>
                            }

                            <td style="border-left-width:medium;border-left-color:black">@dr[23]</td>
                            <td>@dr[24]</td>
                            @if (dr[23].ToString() == "#DIV/0!")
                            {
                                <td>@dr[25]</td>
                            }
                            else
                            {
                                bool green = true;
                                double conc = 0;
                                double dtm = 0, validatn = 0;
                                double.TryParse(dr[23].ToString(), out dtm);
                                double.TryParse(dr[24].ToString(), out validatn);
                                if (dtm == 0 && validatn == 0)
                                {
                                    conc = 100;
                                }
                                else if (validatn == 0)
                                {
                                    conc = 0;
                                }
                                else
                                {
                                    conc = 100 * (validatn / dtm); //Convert.ToDouble(dr[4] );
                                }
                                if (conc < 95 || conc > 105)
                                {
                                    failCount += 1;
                                    green = false;
                                }
                                <td style=@(green ? "background-color:limegreen;color:#fff" : "background-color:red;color:#fff")>@conc.ToString("N2") %</td>
                            }

                            <td style="border-left-width:medium;border-left-color:black">@dr[26]</td>
                            <td>@dr[27]</td>
                            @if (dr[26].ToString() == "#DIV/0!")
                            {
                                <td>@dr[28]</td>
                            }
                            else
                            {
                                bool green = true;
                                double conc = 0;
                                double dtm = 0, validatn = 0;
                                double.TryParse(dr[26].ToString(), out dtm);
                                double.TryParse(dr[27].ToString(), out validatn);
                                if (dtm == 0 && validatn == 0)
                                {
                                    conc = 100;
                                }
                                else if (validatn == 0)
                                {
                                    conc = 0;
                                }
                                else
                                {
                                    conc = 100 * (validatn / dtm); //Convert.ToDouble(dr[4] );
                                }
                                if (conc < 95 || conc > 105)
                                {
                                    failCount += 1;
                                    green = false;
                                }
                                <td style=@(green ? "background-color:limegreen;color:#fff" : "background-color:red;color:#fff")>@conc.ToString("N2") %</td>
                            }
                            <td style="border-left-width:medium;border-left-color:black">@dr[29]</td>
                            <td>@dr[30]</td>
                            @if (dr[29].ToString() == "#DIV/0!")
                            {
                                <td>@dr[31]</td>
                            }
                            else
                            {
                                bool green = true;
                                double conc = 0;
                                double dtm = 0, validatn = 0;
                                double.TryParse(dr[29].ToString(), out dtm);
                                double.TryParse(dr[30].ToString(), out validatn);
                                if (dtm == 0 && validatn == 0)
                                {
                                    conc = 100;
                                }
                                else if (validatn == 0)
                                {
                                    conc = 0;
                                }
                                else
                                {
                                    conc = 100 * (validatn / dtm); //Convert.ToDouble(dr[4] );
                                }
                                if (conc < 95 || conc > 105)
                                {
                                    failCount += 1;
                                    green = false;
                                }
                                <td style=@(green ? "background-color:limegreen;color:#fff" : "background-color:red;color:#fff")>@conc.ToString("N2") %</td>
                            }

                            <td>@failCount</td>
                        </tr>
                    }
                }
            </tbody>

        </table>
    </div>
</div>



@section Scripts
{
    <script src="~/plugins/datatables/extensions/Buttons/js/buttons.print.min.js"></script>
    <script>
        $(document).ready(function () {
            $('.table').DataTable({
                "iDisplayLength": 100,
                dom: 'Bfrtip',
                buttons: [
                {
                    extend: 'print',
                    text: 'Zoom Table',
                    autoPrint: false,
                    title: "FY 2017 Q4 DQA Report"
                }
                ]
            });

            var report_type = window.location.href.split('?type=')[1];           
            $("#rpt_type").val(report_type);


        });
    </script>
}

