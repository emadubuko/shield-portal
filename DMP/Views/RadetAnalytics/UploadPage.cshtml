@*@model List<RADET.DAL.Models.RadetReportModel2>*@

@{
    Layout = "~/Views/Shared/_radetLayoutPage.cshtml";
}

@section AddToHead{
    <script src="~/Scripts/Ultilities.js?v=@DateTime.Now.Ticks.ToString()"></script>
    <script type="text/javascript">
        var myconnectionId;
    </script>
    <style>
        .form-control {
            color: #29b6f6;
        }

        form {
            color: #29b6f6;
        }

        .error-summary {
            text-decoration: underline;
            font-size: 12px;
            color: red;
            cursor: pointer;
        }

        .table > thead > tr > th {
            text-transform: capitalize;
            font-weight: bolder;
        }

        .btn-sm, .btn-group-sm > .btn {
            padding: 4px 6px;
            font-size: 10px;
        }
    </style>
}

<div class="panel panel-info" style="font-size:12px">
    <div class="panel-heading clearfix" style="padding:8px 20%">
        <h5 class="panel-title">Upload RADET</h5>
    </div>
    <div class="panel-body">
        <br />
        <br />
        <p style="color: red;font-weight: bold;font-size:14px; margin-left:10%;">Upload of RADET files is closed</p>
        <form class="form-horizontal" id="form" enctype="multipart/form-data">
            <div class="form-group">
                <label class="col-sm-1 control-label">File</label>
                <div class="col-sm-5">
                    <input type="file" id="field-file" name="upFile" class="form-control" required>
                    <p class="help-block" style="color:red;">File should be less than 1000 MB</p>
                </div>
                <div class="col-sm-3">
                    <select class="form-control" id="selected_ip" required>
                        @foreach (var ip in ViewBag.Orgs)
                        {
                            <option value=@ip.Id>@ip.ShortName</option>
                        }
                    </select>
                </div>
            </div>
            <div class="col-sm-push-1 col-sm-1">
                <button class="btn btn-sm btn-info" id="btnUpload" type="submit" disabled>Upload</button>
            </div>
        </form>         
        <br /><br />
        <h3 id="completion_note" style="visibility:hidden"></h3>
        <div class="row" style="visibility: hidden;padding-left: 90px; padding-right: 40px;" id="hidden_row">
            <h3 id="uploading_note">Uploading files ...please wait</h3>
            <h3 id="validate_note" style="visibility:hidden">Validating files ...please wait</h3>
            <h3 id="saving_note" style="visibility:hidden"> Commiting valid entries to database . . .</h3>
            <div class="progress active" id="progress">
                <div class="progress-bar progress-bar-success progress-bar-striped" role="progressbar" aria-valuenow="100" aria-valuemin="0" aria-valuemax="100" style="width: 0%">
                </div>
            </div>
        </div>

        <div class="line-dashed"></div>
        <div class="table-responsive" id="error_report">
            <div class="col-sm-3">
                <label>Validation summary</label>
            </div>
            <div class="col-sm-push-7 col-sm-1">
                <button class="btn btn-success" id="downloadFullError" type="submit" style="text-transform:capitalize">Download</button>
            </div>
            <table class="table table-bordered table-hover" style="width:100%" id="error_tbl">
                <thead>
                    <tr>
                        <th></th>
                        <th>File name</th>
                        <th>Total errors</th>
                        <th> </th>
                    </tr>
                </thead>
                <tbody></tbody>
            </table>
        </div>
    </div>
</div>
  

<div class="modal fade" id="errorListModal" tabindex="-1" data-keyboard="false" data-backdrop="static" role="dialog" aria-labelledby="myModalLabel">
    <div class="modal-dialog" style="width: 97%;border-color: darkorange;" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="table-responsive" style="font-size: 12px;padding-left: 25px;padding-right: 25px;">
                <div class="col-sm-push-10 col-sm-1">
                    <a class="btn btn-success save-download">Download</a>
                </div>
                <table class="table table-bordered table-hover" style="width:100%" id="error_details_tbl">
                    <thead>
                        <tr>
                            <th></th>
                            <th>File name</th>
                            <th>Tab name</th> 
                            <th>S/No</th>
                            <th>Patient Id</th>
                            <th>Error Message</th>
                        </tr>
                    </thead>
                    <tbody></tbody>
                </table>
            </div>
            <div class="modal-footer">
                <div>
                    <button type="button" class="btn btn-success" data-dismiss="modal"> Close</button>
                </div>
            </div>
        </div>
    </div>
</div>
  
@section Scripts{
    <script src="~/Scripts/jquery.signalR-2.2.2.min.js"></script>
    <script src="~/signalr/hubs"></script>

    <script>
        $(document).ready(function () {
            $("#progress").hide();
            $("#error_report").hide();
              
            $('.modal-dialog').draggable({
                handle: ".modal-header"
            });

            $('#field-file').bind('change', function () {
                var filesize = (this.files[0].size / 1024 / 1024).toFixed(2);
                if (filesize > 1000) {
                    alert('File size exceeded, selected file size is = ' + filesize + "MB; Uploaded file should be less than 1000 MB");
                    this.value = "";
                } 
            });
            
            var errorBag = [];
            //signal R things
            var myhub = $.connection.radetHub;
            myconnectionId = (profileId + uuidv4()).replace('-', '');

            // Client side method for receiving  notifications from the server
            myhub.client.UpdatePages = function (Id, fileName, errorMessagedata) {
                if (Id === myconnectionId) {
                    var bag = { fileName, errorMessagedata };
                    errorBag.push(bag);
                    buildErrorSummaryTable(fileName, errorMessagedata);
                }
            }

            myhub.client.Percent = function (Id, data) {
                if (Id === myconnectionId) {
                    $(".progress-bar.progress-bar-success.progress-bar-striped").css("width", data)
                }
            }

            myhub.client.ValidateNote = function (Id) {
                if (Id === myconnectionId) {
                    $("#uploading_note").css("visibility", "hidden");
                    $("#validate_note").css("visibility", "visible");
                }
            }

            myhub.client.SaveNote = function (Id, data) {
                if (Id === myconnectionId) {
                    $("#validate_note").css("visibility", "hidden");
                    $("#saving_note").css("visibility", "visible");
                }
            }

            myhub.client.CompletionNote = function (Id, data) {
                if (Id === myconnectionId) {
                    $("#validate_note").css("visibility", "hidden");
                    $("#saving_note").css("visibility", "hidden");
                    $("#completion_note").css("visibility", "visible")
                    $("#completion_note").html("");
                    $("#completion_note").append(data);
                }
            }
            // Start the connection.
            $.connection.hub.start().done();
            // end of signal r config


            var previousUpload;
            $("#btnUpload").click(function () {
                $("#output tbody").empty();
                $("#progress").show();
                $("#hidden_row").css("visibility", "visible");
                $("#completion_note").html("");
                $("#completion_note").css("visibility", "hidden")

                var data = new FormData();
                var file = $('form input[type=file]')[0].files[0];
                data.append('file', file);

                $("#btnUpload").prop("disabled", true);
                $("#downloadFullError").prop("disabled", true);

                var theurl = '/RadetAnalytics/RadetFileUpload?connectionId=' + myconnectionId + "&&IP=" + $("#selected_ip").val();

                $.ajax({
                    url: theurl,
                    type: 'POST',
                    data: data,
                    async: true,
                    cache: false,
                    contentType: false,
                    processData: false
                }).done(function (data, statusText, xhr) {
                    if (data.indexOf("StatusCode: 500") !== -1) {
                        alert("an error occured");
                    }

                    $("#progress").hide();
                    $("#hidden_row").css("visibility", "hidden");
                    $("#downloadFullError").prop("disabled", false);
                    $("#btnUpload").prop("disabled", false);
                }).error(function (xhr, status, err) {
                    alert($.parseJSON(xhr.responseText).Message);
                    console.log($.parseJSON(xhr.responseText).Message);
                    $("#progress").hide();
                    $("#btnUpload").prop("disabled", false);
                    $("#downloadFullError").prop("disabled", false);
                });
                return false;
            });

            $(document).on("click", ".error-summary", function (e) {
                var id = e.currentTarget.id;
                var error_details;
                $.each(errorBag, function (i, d) {
                    if (d.fileName == id) {
                        error_details = d.errorMessagedata;
                    }
                });
                $("#error_details_tbl tbody").empty();
                buildErrorDetailsTable(id, error_details);
                $('#errorListModal').modal('show');
            });
             
            $("#downloadFullError").click(function (e) {
                $(e.currentTarget.id).prop("disabled", true);
                var theurl = '/RadetAnalytics/downloaderrorsummary?id=' + myconnectionId;
                $.ajax({
                    url: theurl,
                    type: 'POST',
                    data: new FormData(),
                    cache: false,
                    contentType: false,
                    processData: false
                }).done(function (response) {
                    $(e.currentTarget.id).prop("disabled", false);
                    window.location.href = "/downloads/" + response;
                }).error(function (xhr, status, err) {
                    alert($.parseJSON(xhr.responseText).Message);
                    $(e.currentTarget.id).prop("disabled", false);
                    window.location.reload();
                });
                return false;
            });

            // This must be a hyperlink
            $(".save-download").on('click', function (event) {
                exportTableToCSV.apply(this, [$("#error_details_tbl"), 'report.csv', '-', 0, 0]);
            });
            
            function buildErrorSummaryTable(fileName, errorMessagedata) {
                $("#error_report").show();
                if (errorMessagedata == null || errorMessagedata.length == 0) {
                    var html = "<tr> ";
                    html += "<td><i class='icon-check' style='color: green;font-weight: bolder;margin-left: 30%;'></i></td>";
                    html += "<td>" + fileName + "</td>";
                    html += "<td></td><td></td>";
                    html += "</tr>";
                    $("#error_tbl tbody").append(html);
                }
                else {
                    var html = "<tr> ";
                    html += "<td><i class='icon-cancel' style='color: red;font-weight: bolder;margin-left: 30%;'></i></td>";
                    html += "<td>" + fileName + "</td>";
                    html += "<td>" + errorMessagedata.length + "</td>";
                    html += "<td><a class='error-summary' id='" + fileName + "'>View Error Details</a></td>";
                    html += "</tr>";
                    $("#error_tbl tbody").append(html);
                }
            }

            function buildErrorDetailsTable(fileName, errorMessagedata) {
                if (errorMessagedata != null) {
                    $.each(errorMessagedata, function (i, v) {
                        var html = "<tr> ";
                        html += "<td><i class='icon-cancel' style='color: red;font-weight: bolder;margin-left: 30%;'></i></td>";
                        html += "<td>" + v.FileName + "</td>";
                        html += "<td>" + v.FileTab + "</td>"; 
                        html += "<td>" + v.LineNo + "</td>";
                        html += "<td>" + v.PatientNo + "</td>";
                        html += "<td>" + v.ErrorMessage + "</td>";
                        html += "</tr>";
                        $("#error_details_tbl tbody").append(html);
                    });
                }
            }
  
            function uuidv4() {
                return ([1e7] + -1e3 + -4e3 + -8e3 + -1e11).replace(/[018]/g, c =>
                    (c ^ crypto.getRandomValues(new Uint8Array(1))[0] & 15 >> c / 4).toString(16)
                )
            }

        });
    </script>
}






