@using ShieldPortal.ViewModel;
@using Newtonsoft.Json;
@model List<DQAFailCountComparisonModel>

@{
    ViewBag.Title = "Comparsion With Previous Quarter";
    Layout = "~/Views/Shared/dqiFY18Q2Layout.cshtml";
}


@section AddToHead{
    <style>
        .table-header {
            background-color: darkcyan;
            color: #fff;
            font-weight: bold;
            padding: 10px;
        }
    </style>
    <script type="text/javascript">

             var ipscount =  @Html.Raw((ViewBag.IPLocation as List<IPLGAFacility>).Select(x => x.IP).Distinct().Count());
            var model_data = @Html.Raw(JsonConvert.SerializeObject((ViewBag.IPLocation as List<IPLGAFacility>), Formatting.None, new JsonSerializerSettings()
                        {
                            ReferenceLoopHandling = ReferenceLoopHandling.Ignore,
                            ContractResolver = new CommonUtil.Utilities.NHibernateContractResolver()
                        }));


        function reloadPage(e) {
            window.location.replace('/DQIFY2018Q2/ComparsionWithQ2?report_type=' + e.value);
        }
    </script>
}

<h4 style="margin-left:25%; color: cornflowerblue;text-decoration: underline;"> FY 2018 DQA Comparison </h4>

<div class="col-sm-9">

    <div class="row">

        <form class="form-horizontal">

            <div class="form-group">
                <label class="col-sm-2 control-label" for="sltIP">IP</label>
                <div class="col-sm-3">
                    <select id="sltIP" class="select2 form-control custom_filter" data-id="0" data-placeholder="Select Partner" tabindex="-1" aria-hidden="true" multiple>
                        @if ((ViewBag.IPLocation as List<IPLGAFacility>).Select(x => x.IP).Distinct().Count() > 1)
                        {
                            foreach (var ip in (ViewBag.IPLocation as List<IPLGAFacility>).Select(x => x.IP).Distinct())
                            {
                                <option value="@ip">@ip</option>
                            }
                        }
                        else
                        {
                            <option value="@((ViewBag.IPLocation as List<IPLGAFacility>).Select(x => x.IP).FirstOrDefault())" selected>@((ViewBag.IPLocation as List<IPLGAFacility>).Select(x => x.IP).FirstOrDefault())</option>
                        }
                    </select>
                </div>

                <label class="col-sm-1 control-label" for="sltLGA">LGA</label>
                <div class="col-sm-4">
                    <select id="sltLGA" class="select2 form-control custom_filter" data-id="2" data-placeholder="Select LGA" tabindex="-1" aria-hidden="true" multiple>
                        @foreach (var l in (ViewBag.IPLocation as List<IPLGAFacility>).Select(x => x.LGA).Distinct().OrderBy(x => x.lga_name))
                        {
                            <option value="@l.lga_code">@l.lga_name</option>
                        }
                    </select>
                </div>
                
            </div>

            <div class="form-group">
                <label class="col-sm-2 control-label" for="sltstate">State</label>
                <div class="col-sm-3">
                    <select id="sltstate" class="select2 form-control custom_filter" data-id="1" data-placeholder="Select State" tabindex="-1" aria-hidden="true" multiple>
                        @foreach (var st in (ViewBag.IPLocation as List<IPLGAFacility>).Select(x => x.LGA.State).Distinct().OrderBy(x => x.state_name))
                        {
                            <option value="@st.state_code">@st.state_name</option>
                        }
                    </select>
                </div>

                <label class="col-sm-1 control-label" for="sltFacility">Facility</label>
                <div class="col-sm-4">
                    <select id="sltFacility" class="select2 form-control custom_filter" data-id="3" data-placeholder="Select facility" tabindex="-1" aria-hidden="true" multiple>
                        @foreach (var f in (ViewBag.IPLocation as List<IPLGAFacility>).Select(x => x.FacilityName).OrderBy(x => x))
                        {
                            <option value="@f">@f</option>
                        }
                    </select>
                </div>
            </div>
            <div class="form-group">
                <label class="col-sm-2 control-label">Report Type</label>
                <div class="col-sm-3">
                    <select id="rpt_type" onchange="reloadPage(this)" class="form-control">
                        <option value="Partners">Partner's Report</option>
                        <option value="UMB">UMB's Report</option>
                    </select>
                </div>
            </div>
        </form>
    </div>


    <div class="table-responsive" style="overflow-x: initial;font-size: 12px;">
        <table class="table table-striped table-bordered table-hover" id="main-table">
            <thead>
                <tr>
                    <th class="table-header">IP</th>
                    <th class="table-header">State</th>
                    <th class="table-header">LGA</th>
                    <th class="table-header">Facility</th>
                    <th class="table-header">Q2 Fail Count </th>
                    <th class="table-header">Q1 Fail Count</th>
                </tr>
            </thead>
            <tbody>
                @if (Model != null && Model.Count() > 0)
                {
                    foreach (DQAFailCountComparisonModel dr in Model)
                    {
                        <tr>
                            <td>@dr.IP</td>
                            <td>@dr.State</td>
                            <td>@dr.Lga</td>
                            <td>@dr.Facility</td>
                            <td>@dr.Q2_FAIL_COUNT</td>
                            <td>@dr.Q1_FAIL_COUNT</td>
                        </tr>
                    }
                }
            </tbody>

        </table>
    </div>
</div>



@section Scripts
{
    <script src="~/plugins/datatables/js/jszip.min.js"></script>
    <script src="~/plugins/datatables/js/pdfmake.min.js"></script>
    <script src="~/plugins/datatables/js/vfs_fonts.js"></script>
    <script src="~/plugins/datatables/extensions/Buttons/js/buttons.print.min.js"></script>
    <script src="~/Scripts/randmonizer_utility.js?v=@DateTime.Now.Ticks.ToString()"></script>
    
    <script>
        $(document).ready(function () {
            var dataTable = $('.table').DataTable({
                "iDisplayLength": 50,
                dom: 'Bfrtip',
                buttons: [
                    {
                        text: 'Export to Excel',
                        extend: 'excelHtml5',
                        exportOptions: {
                            columns: ':visible'
                        }
                    },
                    {
                        text: 'Export to PDF',
                        extend: 'pdfHtml5',
                        exportOptions: {
                            columns: ':visible'
                        }
                    }
                ]
            });

            function filerData(controlId) {
                let column = $("#" + controlId).attr('data-id');
                let filter = "";
                $("#" + controlId + " option:selected").each(function () {
                    filter += filter !== "" ? "|" + $(this).text() : $(this).text();
                });
                dataTable
                    .columns(column)
                    .search(filter, true, false)
                    .draw();
            }

            $('.custom_filter').change(function (e) {
                filerData(e.currentTarget.id);
            });
            $("#main-table_filter").remove();
            $("#main-table_length.dataTables_length").removeClass("dataTables_length").addClass('dataTables_filter');
            $('input.form-control.input-sm[type=search]').unbind();

            var report_type = window.location.href.split('?report_type=')[1];
            $("#rpt_type").val(report_type);




        });
    </script>
}